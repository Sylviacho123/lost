# -*- coding: utf-8 -*-
"""0705

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nU6K6wqE-SoyQYqdwLhn3PkyE0lxpGuC

<a href="https://colab.research.google.com/github/yenlung/Python-AI-Book/blob/main/%E5%86%92%E9%9A%AA11_12_DNN_%E5%81%9A%E6%89%8B%E5%AF%AB%E8%BE%A8%E8%AD%98.ipynb" target="_parent"><img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/></a>
"""

import tensorflow as tf
import numpy as np
from PIL import Image
import gradio as gr

# 載入訓練好的模型
model = tf.keras.models.load_model("lost_item_classifier.keras")

# 類別標籤（根據你訓練時的順序）
labels = ['phone', 'wallet', 'key', 'umbrella', 'backpack']

def recognize_object(image):
    # 圖片處理
    image = image.convert("RGB").resize((224, 224))
    img_array = np.array(image).astype("float32") / 255.0
    img_array = np.expand_dims(img_array, axis=0)

    # 預測
    predictions = model.predict(img_array)[0]
    predicted_index = np.argmax(predictions)
    predicted_label = labels[predicted_index]

    return f"這是：{predicted_label}"

# 建立 Gradio 介面
iface = gr.Interface(
    fn=recognize_object,
    inputs=gr.Image(type="pil", label="上傳遺失物圖片"),
    outputs=gr.Textbox(label="預測結果"),
    title="📦 遺失物辨識系統",
    description="請上傳手機、錢包、鑰匙、雨傘或書包的圖片，我會幫你判斷是什麼。"
)

iface.launch()

# ✅ 安裝必要套件（只需跑一次）
!pip install icrawler tensorflow pillow matplotlib --quiet

import os
from icrawler.builtin import GoogleImageCrawler

# 📁 分類設定
categories = ['phone', 'wallet', 'key', 'umbrella', 'backpack']
num_images = 50
data_dir = 'dataset'

# 📥 自動建立資料夾與抓圖
for category in categories:
    save_dir = os.path.join(data_dir, category)
    os.makedirs(save_dir, exist_ok=True)
    crawler = GoogleImageCrawler(storage={'root_dir': save_dir})
    crawler.crawl(keyword=category, max_num=num_images)

print("✅ 圖片下載完成！")


import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout
from tensorflow.keras.preprocessing.image import ImageDataGenerator

# 參數設定
IMAGE_SIZE = (224, 224)
BATCH_SIZE = 16
EPOCHS = 10
NUM_CLASSES = len(categories)

# 圖片資料處理與資料增強
train_datagen = ImageDataGenerator(
    rescale=1./255,
    validation_split=0.2,
    rotation_range=15,
    zoom_range=0.1,
    horizontal_flip=True
)

train_generator = train_datagen.flow_from_directory(
    data_dir,
    target_size=IMAGE_SIZE,
    batch_size=BATCH_SIZE,
    class_mode='categorical',
    subset='training'
)

val_generator = train_datagen.flow_from_directory(
    data_dir,
    target_size=IMAGE_SIZE,
    batch_size=BATCH_SIZE,
    class_mode='categorical',
    subset='validation'
)

print("📚 類別對應：", train_generator.class_indices)

# CNN 模型架構
model = Sequential([
    Conv2D(32, (3, 3), activation='relu', input_shape=(224, 224, 3)),
    MaxPooling2D(2, 2),
    Conv2D(64, (3, 3), activation='relu'),
    MaxPooling2D(2, 2),
    Flatten(),
    Dense(128, activation='relu'),
    Dropout(0.3),
    Dense(NUM_CLASSES, activation='softmax')
])

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# 🏋️ 開始訓練
history = model.fit(train_generator, validation_data=val_generator, epochs=EPOCHS)

# 💾 儲存模型
model.save("lost_item_classifier.keras")
print("✅ 模型已儲存為 'lost_item_classifier.keras'")


import numpy as np
from PIL import Image
import gradio as gr
import tensorflow as tf

# 載入模型
model = tf.keras.models.load_model("lost_item_classifier.keras")
labels = ['phone', 'wallet', 'key', 'umbrella', 'backpack']  # 根據你的類別

def recognize_object(image):
    image = image.convert("RGB").resize((224, 224))
    img_array = np.array(image).astype("float32") / 255.0
    img_array = np.expand_dims(img_array, axis=0)

    predictions = model.predict(img_array)[0]
    index = np.argmax(predictions)
    confidence = predictions[index]

    return f"這是：{labels[index]}（信心：{confidence:.2%}）"

# Gradio 介面
iface = gr.Interface(
    fn=recognize_object,
    inputs=gr.Image(type="pil", label="上傳遺失物圖片"),
    outputs=gr.Textbox(label="預測結果"),
    title="📦 遺失物辨識系統",
    description="請上傳手機、錢包、鑰匙、雨傘或書包的圖片，我會幫你判斷是什麼。"
)

iface.launch()


iface.launch(share=True)